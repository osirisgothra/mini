#!/bin/bash
#
#    pstab
#    get fstab in perl format
#    eso-bin/mini
#    collection of esoteric files
#
#    Copyright (C) 1995-2018 Gabriel Thomas Sharp
#
#    Written by Gabriel T. Sharp <21shariria@gmail.com>
#    Latest versions of this and all of my projects can be
#    obtained by visiting the repository: 
#
#    <https://github.com/osirisgothra>
#
#    Because of the global availability of github at this point, hosting
#    any additional servers for public use no longer serves a purpose. All
#    content is available 24/7 through github. (Thanks to GITHUB!).
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program; if not, write to the Free Software Foundation, Inc.,
#    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#    HISTORY
#
#	 Sat Sep 15 21:16:47 EDT 2018
#            osirisgothra@larnica initially created this file
#            with the original name, pstab
#
#  (this header was created using the template generator by Gabriel T. Sharp)
#
#

# select either first file argument, /dev/stdout, or process' output file device
# whichever is writable first (- is a shorthand for direct process tty output)

declare -v TARGET="${1-/dev/stdout}"
[[ $TARGET == "-" ]] ||  \
	TARGET=/$$/fd/0
[[ -w $TARGET ]] ||        \
	TARGET=/$$/fd/0
[[ -w $TARGET ]] ||          \
	{
		echo "fatal: no target to write to (cant find stdout, args(${*}), or, pid $$ process' fd output (0)";
		[[ $- =~ i ]] &&        \
			return 127 ||        \
			exit 127;
	}

# write out text to TARGET

{
printf "my %%fstab = (\n"
cat                                        \
	                                                             /etc/fstab |
	                                                  grep -Pv '^ *(#.*)?$' |
	sed -r 's/(\S+)/"\1",/g;s/(^[^,]+)(,)/\1 => [ /g;s/^/\t/g;s/,\s*$/ ]/g' |
                                                              tr -s ' \n\t'
printf "\n);\n"
} > "$TARGET"

