#!/bin/bash
usage()
{
cat <<-EOF
					usage: thrgrep "search-regex"
					   or: thrgrep "search-regex" [nice]
					   or: thrgrep "search-regex" [nice] [be-ionice]
					   or: thrgrep "search-regex" [nice] [class] [ionice]

					where "search-regex" is any regular expression(s) that are
					supported by pgrep (see pgrep(1) for details), and [nice] is
					an integer value, lowest values being highest priority. Accepted
					values are from -20 to 19, which is the lowest priority. Also,
					the [be-ionice] is a value 0-5 which defines which "Best Effort"
					classed nice-ness for io priority via ionice. The fourth incantation
					allows for the change of this ionice class to one of the three
					accepted classes known for ionice (realtime, best-effort, or idle).

					values accepted are subject to change with the programs that are used
					here, please refer to each separate program for up-to-date information
					on it's possible arguments:

					[nice]			see nice(1) and renice(1)
					[(be-)ionice]	see ionice(3)
					[class]			see ionice(3) or ioprio(3)
					"search-regex"	see pgrep(1) and perlreref(2) for detailed info on regexes

					regular expressions are NOT checked for syntax validity by this program
					please make sure you test them in pgrep before bringing them here as there
					may be problems when using extraneous expressions as an input expression.

					written for bash-perl programming environments
EOF
}

# renice [-n] <priority> [-p|--pid] <pid>...
# renice [-n] <priority>  -g|--pgrp <pgid>...
# renice [-n] <priority>  -u|--user <user>...
# ionice -c <0|1|2|3|none|realtime|best-effort|idle> -n <0|1|2|3|4|5|6|7> -p|--pid <pid> --t|--ignore
# ionice -c <0|1|2|3|none|realtime|best-effort|idle> -n <0|1|2|3|4|5|6|7> -P|--pgid <pgrp> --t|--ignore
# ionice -c <0|1|2|3|none|realtime|best-effort|idle> -n <0|1|2|3|4|5|6|7> -u|--uid <uid> --t|--ignore
# ionice -c <0|1|2|3|none|realtime|best-effort|idle> -n <0|1|2|3|4|5|6|7> </path/to/command> --t|--ignore
# ionice --help|-h|-V|--version

if [[ $* =~ --help ]] || [[ $# -eq 0 ]]; then
	echo -e "\nat least 1 argument is required!\n"
	usage
	exit 0
fi

CMD="$1"
shift
THREADS=( $(pgrep -w $CMD) )
if [[ ${#THREADS[@]} -eq 0 ]]; then
	echo "no threads found under the given critieria: $CMD"
	exit 1
else
	if [[ $UID -eq 0 ]]; then
		echo "running as root, running in normal mode..."
		pfx=command
	else
		echo "running as a non-root user, switching to sudo mode..."
		pfx=sudo
	fi
fi
for THREADID in "${THREADS[@]}"; do
	case $# in
		0)	# display only
			echo "$THREADID"
			;;
		1)	# renice only
			$pfx renice -n $1 -p $THREADID
			;;
		2)	# renice | besteffort-prio
			$pfx renice -n $1 -p $THREADID
			$pfx ionice -c best-effort -n $2 -p $THREADID
			;;
		3)	# renice | class + prio
			$pfx renice -n $1 -p $THREADID
			$pfx ionice -c $2 -n $3 -p $THREADID
			;;
		*)
			usage
			break
			;;
	esac
done

