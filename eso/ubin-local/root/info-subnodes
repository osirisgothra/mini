#!/bin/bash
#
# info-subnodes
# print nodes/topics of a manpage or infopage
# eso
# esoteric projects
#
# SYNOPSIS
#
#  info-subnodes [manpage|infopage|infonode]
#
#  where manpage can be either just the command (ie, 'apt-get') or
#  when there are both a manpage AND an info page (ie, with 'bash') you
#  may add the ':man' suffix to force the manpage to be used. By default
#  info pages override the manpages, this alters this behavior on a item-by-item
#  basis.
#
# SUMMARY
#
# given each commandline argument, does one of:
#  dumps nodes from man
#  dumps nodes from info
#  does not dump nodes for the entry because it's 
#      not a doc source understood by man or info
# this is intented to be companion to info-topic or man-topic
# which are symlinked aliases to info-doctopic (without alias needs -i or -m)
#

declare -a SUBNODES=( )
declare -i FORCE_MAN=0
declare -g ISMANPAGE="*manpages*"
declare -g HADIFS=`if [[ -v IFS ]]; then echo 1; else echo 0; fi`
declare -g OLDIFS="$IFS"
declare -g IFS=$'\n'
for arg; do
	if [[ $arg =~ :man$ ]]; then
		arg=${arg%%:man}
		FORCE_MAN=1
	else
		FORCE_MAN=0
	fi
	target=$(info -w "$arg" | tr -d '\n ')	
	if [[ $FORCE_MAN == 1 ]] || [[ "$target" == "$ISMANPAGE" ]]; then
		SUBNODES=( $(zcat `man -w $arg` | grep '(?<=^.SH ")[^"]+' -Po) )
	elif [[ "$target" =~ .info ]] || [[ "$target" =~ $arg ]]; then
		SUBNODES=( `info --subnodes -o /dev/stdout $arg | grep '(?<=Node: )[^,]+' -Po` )
	else
		echo "no entry for $arg"
		continue
	fi	
	for x in "${SUBNODES[@]}"; do
		echo "$x"
	done
done
if ((HADIFS)); then
	IFS=$OLDIFS
else
	unset IFS
fi