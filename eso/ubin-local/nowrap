#!/bin/zsh
#
#    nowrap
#    re-echo output without linewrapping
#    eso-bin
#    esoteric scripts and binaries project
#
#    Copyright (C) 1995-2018 Gabriel Thomas Sharp
#
#    Written by Gabriel T. Sharp <21shariria@gmail.com>
#    Latest versions of this and all of my projects can be
#    obtained by visiting the repository: 
#
#    <https://github.com/osirisgothra>
#
#    Because of the global availability of github at this point, hosting
#    any additional servers for public use no longer serves a purpose. All
#    content is available 24/7 through github. (Thanks to GITHUB!).
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program; if not, write to the Free Software Foundation, Inc.,
#    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#    HISTORY
#
#	 Sun Aug 26 04:27:48 EDT 2018
#            osirisgothra@larnica initially created this file
#            with the original name, nowrap
#
#	FEATURES
#
#		- uses setterm(1) so any terminal type should be supported
#		- turns linewrapping back on after finished, killed,
#         or interrupted with CTRL+C, etc.
#       - works as a pipe command or a command front end
#		- when in pipe mode, a filter program can be set (like sed, zcat, etc)
#
#  (this header was created using the template generator by Gabriel T. Sharp)
#
#	HELP TEXT STARTS HERE
#	syntax: nowrap [program(s)] ...
#      or : program | nowrap
#	END HELP TEXT
#
msgs=0
msg() { echo -ne "$@" > /dev/stderr; }
msgt() { echo -e "$@" > /dev/stderr; }

TTY=$(tty)
trap 'setterm -linewrap off' SIGINT
trap 'echo -e "killed...deadly"; setterm -linewrap off > /dev/tty1' SIGKILL

if [[ $TTY =~ (not a tty) ]]; then
	#echo "operating in pipe mode" > /dev/stderr
	setterm -linewrap off
	case $# in
	0)	cat;;
	*)	"$@";;
	esac
	setterm -linewrap on
else
	#echo "operating in command mode" > /dev/stderr
	setterm -linewrap off
	"$@"
	setterm -linewrap on
fi