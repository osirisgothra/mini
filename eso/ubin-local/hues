#!/bin/zsh

# generate number ranges in hue table

# 90 values, at integers of 15 degrees, or 255*6 values

# hue   degree      color/transition

# red   0           rr                                                  
#  -                rr -> rrgg
# ylw   15                rrgg
#                         rrgg -> gg                                          
# green 30                        gg
#                                 gg -> ggbb
# cyan  45                              ggbb
#                                       ggbb -> bb
# blue  60                                      bb
#                                               bb -> bbrr
# mgnta 75                                            bbrr
#                                                     bbrr -> rr
# red   90
# 90 gets turned back into 0, then it repeats
step=255

:
# red           yellow          green            cyan              blue           magenta            red -----------+
#  |rr  ->  rrgg  | rrgg  ->   gg | gg   ->   ggbb | ggbb   ->   bb | bb   ->   bbrr | bbrr   ->   rr | symbolic    |
#  |ff      ff    | ff         00 | 00        00   | 00          00 | 00        ff   | ff          ff | REDS   rr   |
#  |00      ff    | ff         ff | ff        ff   | ff          00 | 00        00   | 00          00 | GREENS gg   |
#  |00      00    | 00         00 | 00        ff   | ff          ff | ff        ff   | ff          00 | BLUES  bb   |   
#  |ff0000  ffff00| ffff00 00ff00 | 00ff00  00ffff | 00ffff  0000ff | 0000ff  ff00ff | ff00ff   ff0000| packed 0x   |
#  |     100      |    -10000     |        1       |   ^^  -100     |  +10000 ^^     |     ^^ -1      | interleaved |
#  +--------------+---------------+----------------+----------------+----------------+----------------+-------------+


declare -ga reds=( 255 255   255 0   0 0    0 0 )

pr() {
        # pr (lowvalue,highvalue,step)
        if [[ $# -ne 3 ]]; then
                echo "$0 - $# arguments, you need 3 arguments hi/lo/count"
                return
        fi
        float dir=1
        float l=$1
        float h=$2
        float c=$3
        if (( l > h )); then
            dir=-1
        elif (( l == h )); then
            for ((x=0;x<c;x++)) {
                printf "$l "
                return
            }
        else
        for ((x=0.0;x<c;x++)) {
            echo -n "$(( int((x/(c-1))*(h-l))+l ))\t";
        }; 
        echo
    }

pr $@ 
