#!/bin/zsh
#!/bin/bash
#
#    blends
#    shows some ansi colors and their blends
#    mini
#    esoteric projects
#
#    Copyright (C) 1995-2021 Gabriel T. Sharp
#
#    Written by Gabriel T. Sharp <21shariria@gmail.com>
#    Latest versions of this and all projects can be
#    obtained by visiting the repository at:
#
#    <https://github.com/osirisgothra>
#
#    This program is free software; you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation; either version 2 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License along
#    with this program; if not, write to the Free Software Foundation, Inc.,
#    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
#
#    HISTORY
#
#	 Mon 29 Mar 2021 07:40:38 AM EDT
#            osirisgothra@ initially created this file
#            with the original name, blends
#
#
#
#  This template and header was created using the template generator by Gabriel T. Sharp
#  You can download the latest version at: <https://www.github.com/osirisgothra/mini.git/eso/ubin-local/template>
#  (the url is subject to changes on github's behalf, please submit a pull request to fix or request a fix on any url changes)
#


# Get Options from Command Line for blends

declare -ga opts
declare -gi quiet_level=0
declare -g version_text="$(tput setaf 124)blends$(tput sgr0) Version 1.0 (C)2020 Gabriel T. Sharp, Licensed under GNU LGPL3 at https://gpl.gnu.org/gpl3.html"
declare -g help_text="blends
shows some ansi colors and their blends

SYNTAX

	blends [OPTIONS] START END

OPTIONS
	--help -h	show this help text
 --version -v   display version information and exit (also shows license info)
   --quiet -q   increase quiet level by one (quiet level is always zero if left alone)

ARGUMENTS

    START       The first blendrange to show, a NUMBER.
    END         The last blendrange to show, a NUMBER.
	NUMBER		An integer, usually between 0 and 36.


LICENSE

	GNU LGPL3 is available in full at the GNU GPL website, or through the google voice command 'show me GNU LGPL VERSION 3'

"
lprint -P() { builtin print -P "$@"; }

print -P() {
	if [[ $quiet_level -gt 0 ]] {
		return 127
	} else {
		builtin print -P "$@"
	}
}

is() {
    case $1 in
        quiet)  ((quiet_level > 0));;
      verbose)  ((quiet_level < 0));;
       normal)  ((quiet_level == 0));;
     notquiet)  ((quiet_level <= 0));;
            *)  ((quiet_level == 1));;
    esac
}

if opts=( `getopt -n $0 -o hvqV -l verbose,help,version,quiet -- "$@"` ); then
	eval set -- "${opts[@]}"
	while [[ $# -ge 0 ]]; do
		curopt=$1
		nextopt=${2-none}
		shift
		# handle --options and -o ptions here
		case $curopt in
			--help|-h)	print -P "$help_text"; exit 127;;
			--version|-v) print -P "$version_text"; exit 127;;
            --verbose|-V) let quiet_level--;;
			--quiet|-q) let quiet_level++;;
			--) is verbose && print -P "done with options";  break;;
			*)	is verbose && print -P "handling option: $curopt (next:$nextopt)";;
		esac
	done
	for arg; do
		# verify/handle non-option arguments
		case $arg in
			*)	is verbose && print -P "handling argument: $arg";;
		esac
	done

else
	is notquiet && print -P "error, code is $?, exiting with fail"
fi
start=${1-16}
end=${2-216}

clear
print -P
printf "    "
for ((x=$(((start/6)-2));x<$(( end / 6 ));x+=1)) {
    printf "%02d " $x
}
print -P ""
for ((x=$start;x<$end;x+=36)) { 
    for ((y=-1;y<36;y++)) {
        if ((y < 0)) { 
            printf "%3d " $x
        } else { 
            z=$((x+y))
            printf "\e[38;5;${z}mXX "
        }
    }
    print -P ""
}
print -P